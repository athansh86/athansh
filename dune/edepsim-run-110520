
 
[athansh  edep-sim  ]> edep-sim -C -u -e 100 genie.mac   -g  nd_hall_mpd_only_ECalOctagon_60l_UniformMagnet.gdml -o edsm_output_110520_n100evt.root
.
.
.
% [Event] Begin Event: 98 w/ 1 vertices
% Event Summary for run 0 event 98
%    Primaries 1
%    Trajectories 984
%    Segment Detectors 4
Error in <TBranchElement::TBranch::WriteBasketImpl>: basket's WriteBuffer failed.

Error in <TBranchElement::TBranch::Fill>: Failed to write out basket.

Error in <TBranchElement::Fill>: Failed filling branch:Trajectories.Points, nbytes=-1
Error in <TBranchElement::Fill>: Failed filling branch:Trajectories.Trajectories.Points, nbytes=-1
Error in <TBranchElement::TBranch::WriteBasketImpl>: basket's WriteBuffer failed.

Error in <TBranchElement::TBranch::Fill>: Failed to write out basket.

Error in <TBranchElement::Fill>: Failed filling branch:Trajectories.InitialMomentum, nbytes=-1
Error in <TBranchElement::Fill>: Failed filling branch:Trajectories.Trajectories.InitialMomentum, nbytes=-1
Error in <TBranchElement::Fill>: Failed filling branch:Event.Trajectories, nbytes=-1
Error in <TBranchElement::TBranch::WriteBasketImpl>: basket's WriteBuffer failed.

Error in <TBranchElement::TBranch::Fill>: Failed to write out basket.

Error in <TBranchElement::Fill>: Failed filling branch:SegmentDetectors.second, nbytes=-1
Error in <TBranchElement::Fill>: Failed filling branch:SegmentDetectors.SegmentDetectors.second, nbytes=-1
Error in <TBranchElement::Fill>: Failed filling branch:Event.SegmentDetectors, nbytes=-1
Error in <TTree::Fill>: Failed filling branch:EDepSimEvents.Event, nbytes=-1, entry=99
 This error is symptomatic of a Tree created as a memory-resident Tree
 Instead of doing:
    TTree *T = new TTree(...)
    TFile *f = new TFile(...)
 you should do:
    TFile *f = new TFile(...)
    TTree *T = new TTree(...)


% [Event] Begin Event: 99 w/ 1 vertices
% Event Summary for run 0 event 99
%    Primaries 1
%    Trajectories 301
%    Segment Detectors 2
Error in <TBranchElement::TBranch::WriteBasketImpl>: basket's WriteBuffer failed.

Error in <TBranchElement::TBranch::Fill>: Failed to write out basket.

Error in <TBranchElement::Fill>: Failed filling branch:Trajectories.Points, nbytes=-1
Error in <TBranchElement::Fill>: Failed filling branch:Trajectories.Trajectories.Points, nbytes=-1
Error in <TBranchElement::TBranch::WriteBasketImpl>: basket's WriteBuffer failed.

Error in <TBranchElement::TBranch::Fill>: Failed to write out basket.

Error in <TBranchElement::Fill>: Failed filling branch:Trajectories.InitialMomentum, nbytes=-1
Error in <TBranchElement::Fill>: Failed filling branch:Trajectories.Trajectories.InitialMomentum, nbytes=-1
Error in <TBranchElement::Fill>: Failed filling branch:Event.Trajectories, nbytes=-1
Error in <TBranchElement::TBranch::WriteBasketImpl>: basket's WriteBuffer failed.

Error in <TBranchElement::TBranch::Fill>: Failed to write out basket.

Error in <TBranchElement::Fill>: Failed filling branch:SegmentDetectors.second, nbytes=-1
Error in <TBranchElement::Fill>: Failed filling branch:SegmentDetectors.SegmentDetectors.second, nbytes=-1
Error in <TBranchElement::Fill>: Failed filling branch:Event.SegmentDetectors, nbytes=-1
Error in <TTree::Fill>: Failed filling branch:EDepSimEvents.Event, nbytes=-1, entry=100
 This error is symptomatic of a Tree created as a memory-resident Tree
 Instead of doing:
    TTree *T = new TTree(...)
    TFile *f = new TFile(...)
 you should do:
    TFile *f = new TFile(...)
    TTree *T = new TTree(...)


% ### Run 0 ending.
% Number of events = 100
% User=38.090000s Real=38.623732s Sys=0.160000s

 {
    
TFile *f = new TFile("edsm_output_110520.root");
/// Get the event tree.
TTree* events = (TTree*) f->Get("EDepSimEvents");

/// Set the branch address.

 int numberOfEntries = events->GetEntries();
 std::cout << "Number of  events  = " << numberOfEntries;
/// Get event zero.
events->GetEntry(0);



}


#include "TG4Event.h"

TFile *f = new TFile("edsm_output_110520.root");
/// Get the event tree.
TTree* events = (TTree*) gFile->Get("EDepSimEvents");

/// Set the branch address.
TG4Event* event=NULL;
events->SetBranchAddress("Event",&event);

/// Get event zero.
events->GetEntry(0);

